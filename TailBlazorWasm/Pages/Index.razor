@page "/"

<h1>Welcome to TailBlazor-Templates</h1>

<p>
Find the latest templates <a href="https://www.nuget.org/packages/McNerdius.TailBlazorTemplates/">on NuGet</a> or browse the code <a href="https://github.com/McNerdius/TailBlazor-Templates/">on GitHub.</a>
</p>

<hr />

<b>tl;dr:</b> MSBuild handles npm stuff, you can use Tailwind syntax and nesting in Scoped CSS files, use <a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.NpmTaskRunner64" target="_blank">this</a> if you're using Visual Studio and want to automate Tailwind CSS incremental builds.  Check out <a href="https://www.tailblazor.dev">tailblazor.dev</a> for more detailed info.

<hr />

<h2>What's in the box ?</h2>

<ul>
    <li><strong>csproj</strong> tweaks to enable usage of Tailwind CSS features like <code>@@apply</code> and nesting in your scoped <code>*.razor.css</code> files.</li>
    <li>
        Starter NPM/Tailwind CSS boilerplate:
        <ul class="pl-8 list-[circle]">
            <li><strong>package.json:</strong> <code>npm</code> scripts using <code>dotnet</code> CLI verbs: <code>build</code>, <code>watch</code>, and <code>publish</code>.  (publish == build + <a href="https://cssnano.co/" target="_blank">cssnano</a>).</li>
            <li><strong>tailwind.config.json:</strong> registers a must-have <a href="https://github.com/jorenvanhee/tailwindcss-debug-screens" target="_blank">debug-screens</a> Tailwind plugin.</li>
            <li><strong>postcss.config.json:</strong> enables the <a href="https://github.com/postcss/postcss-nested" target="_blank">nesting</a> postcss plugin that's bundled with Tailwind CSS.  Not quite Sass, but this 137 byte file is all that's needed to use it.  <small>(take a peek at the css for the Blazor error ui & progress indicator.)</small>
            </li>
        </ul>
    </li>
    <li>MSBuild steps (<strong>tailwindcss.targets</strong> file) to install <code>npm</code> dependencies and run the <code>npm</code> <code>build</code>/<code>publish</code> scripts automatically.  This is using <code>Inputs</code> and <code>Outputs</code> incremental build hints so in theory <code>npm</code> scripts should only run if any input CSS file is newer than the output bundle.  (I've yet to sort out why it's sometimes inconsistent, having dismissed common causes.)</li>
    <li>A sample PowerShell script (<strong>watch.ps1</strong> to launch <code>npm run watch</code> alongside <code>dotnet watch run</code>.  <em>If you're using Visual Studio:</em> use <a href="https://marketplace.visualstudio.com/items?itemName=MadsKristensen.NpmTaskRunner64" target="_blank">NPM Task Runner</a>, connecting the <code>watch</code> task defined in <code>package.json</code> to "Project Open".  (<a href="images/npm_task_runner.png" target="_blank">see here</a> - keep an eye on the Task, it may crash !) </li>
</ul>

<h2>What's not ?</h2>

<ul>
    <li>Any sort of JS build tooling.  Simple <code>dotnet</code> build steps calling the <code>tailwindcss</code> CLI are all that's needed, no grunts or gulps or rollups or webpacks to be seen here.</li>
    <li>Fixes for Blazor's quirks.  Not sure yet about .NET 7 behavior, but <code>dotnet watch</code> picking up on <code>tailwindcss</code> incremental builds has been hit or miss.  See <a href="https://github.com/dotnet/aspnetcore/issues/37496">here</a> for a workaround idea.</li>
</ul>

<h2>Notes</h2>

<ul>
    <li>The templates target .NET 7 - but only for the loading animation, using the <a href="https://devblogs.microsoft.com/dotnet/asp-net-core-updates-in-dotnet-7-preview-7/#new-blazor-loading-page">CSS custom properties</a> new to .NET 7.</li>
    <li>Unlike similar templates/how-tos i've seen, <code>dotnet build</code> happens <em>before</em> <code>tailwindcss</code>.  Any Scoped <code>*.razor.css</code> files are bundled by <code>dotnet</code>, then imported in the root CSS file to be processed by <code>tailwindcss</code>.  <strong>If you're not using Blazor's Scoped CSS or if you haven't yet run a build on your Blazor project, the Scoped CSS bundle won't exist on disk, and <code>tailwindcss</code> will fail.</strong></li>
</ul>

<hr>

<p class="text-[150%]">Visit <a href="https://www.tailblazor.dev" target="_blank">www.tailblazor.dev</a> for a step-by-step of converting a <code>dotnet new blazorwasm-empty</code> template. 😃👍</p>



<footer class="font-mono text-right">@@ Index.razor</footer>
